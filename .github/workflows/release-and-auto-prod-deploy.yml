name: Release and Prod Deploy

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issue: write

env:
  BASE_BRANCH: ${{ github.ref_name }}

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      latest_release_tag: ${{ steps.set-latest-release-tag.outputs.latest_release_tag }}
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: set latest release tag
        id: set-latest-release-tag
        run: |
          echo "latest_release_tag=$(git tag | grep -E '^v[0-9]+[.][0-9]+[.][0-9]+$' | sort -V | tail -n 1)" >> "$GITHUB_OUTPUT"

      - name: release-please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          target-branch: ${{ env.BASE_BRANCH }}

      - name: release-please status
        run: echo "release_created=${{steps.release.outputs.release_created}}" >> "$GITHUB_OUTPUT"

  auto-deploy:
    needs: release
    runs-on: ubuntu-latest
    env:
      LATEST_RELEASE_TAG: ${{ needs.release.outputs.latest_release_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: set APP_ENV
        run: |
          echo "__APP_ENV=prod" >> "$GITHUB_ENV"

      - name: setup runtime
        uses: ./.github/actions/setup/
     
      # ターゲットはいつも本番
      - name: diff
        run: APP_ENV=$__APP_ENV npx nx affected --verbose --target diff --base=refs/tags/"${LATEST_RELEASE_TAG}" --head=remotes/origin/"${BASE_BRANCH}"      


      # ターゲットはいつも本番
      - name: deploy
        run: APP_ENV=$__APP_ENV npx nx affected --verbose --target deploy --base=refs/tags/"${LATEST_RELEASE_TAG}" --head=remotes/origin/"${BASE_BRANCH}"      
        if: ${{ needs.release.outputs.release_created }}
     
